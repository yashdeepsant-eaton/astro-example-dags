"""
test_sf_kishan - Test
DAG auto-generated by Astro Cloud IDE.
"""

from airflow.decorators import dag,task
from astro import sql as aql
from airflow.models.param import Param
import pandas as pd
import pendulum
import time


@aql.dataframe(task_id="hello_world")
def hello_world_func():
    time.sleep(120)
    return "Hello, world!"

@aql.dataframe(task_id="use_param")
def use_param_func(hello_world: pd.DataFrame):
    @task
    def upstream_task(**context):
        kishan=context["params"]["param1"]
        print(context["params"]["param1"])
        return kishan
        
    my_string = hello_world
    my_new_String=upstream_task()
    return my_string

default_args={
    "email_on_retry": True,
    "email_on_failure": True,
    "retries": 2,
    "retry_delay": pendulum.duration(seconds=10).as_timedelta(),
    "max_retry_delay": pendulum.duration(seconds=16).as_timedelta(),
    "sla": pendulum.duration(seconds=5).as_timedelta(),
    "owner": "kishanashra@eaton.com,Open in Cloud IDE",
}

@dag(
    default_args=default_args,
    schedule="*/5 * * * *",
    start_date=pendulum.from_format("2023-10-10", "YYYY-MM-DD").in_tz("UTC"),
    catchup=False,
    params={
        "param1": "Hello!",
        "param2": Param(
            23,
            type="integer",
        ),
    },
    owner_links={
        "kishanashra@eaton.com": "mailto:kishanashra@eaton.com",
        "Open in Cloud IDE": "https://cloud.astronomer.io/cllyrswtd00k001mvcn1z9xau/cloud-ide/clnk6fwss00q201ptcop5y9wp/clnk7fadk027v01mmpnts1tpf",
    },
)

def test_sf_kishan():
    
        
    hello_world = hello_world_func()

    use_param = use_param_func(
        hello_world
    )

    use_param << hello_world

dag_obj = test_sf_kishan()
